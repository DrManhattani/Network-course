

	* TCP (Transmission Control Protocol) - протокол управления передачей
	
		• обеспечивает надежную доставку данных: как гарантию доставки данных, так и сохранение порядка следования
		• сервис TCP называется НАДЕЖНАЯ ПЕРЕДАЧА ПОТОКА БАЙТ (reliable byte stream)

	ПОТОК БАЙТ:
		1. от приложения протокол TCP получает поток байт, который может быть очень большим. Например, вы можете
		   скачивать из интернета файлы, которые весят несколько гигабайт.
		2. данные файлы приходят на транспортный уровень в виде одного большого потока байт
		3. в протоколе TCP байты делятся на отдельные части - СЕГМЕНТЫ. И каждый сегмент отправляется отдельно получателю
		4. получатель принимает сегменты, собирает их в отдельный большой поток байт и отправляет этот поток байт
		   приложению


	ГАРАНТИЯ ДОСТАВКИ:
		* Для того, чтобы обеспечить гарантию доставки данных TCP использует подтверждение получения сообщений:
		1. отправитель посылает по сети некоторый сегмент данных
		2. получатель принимает сегмент и отправляет подтверждение ACK (acknowledgement) 
		3. цикл повторяется

		• ВОЗМНОЖНЫЕ ПРОБЛЕМЫ:
			1. получатель не отправляет подтверждение сообщения (решается таймером и повторной отправкой)
			2. сегменты доходят не в том порядке или дублируются (решается нумерацией сегментов)

		1. МЕХАНИЗМ РЕШЕНИЯ ПРОБЛЕМЫ ОТСУТСТВИЯ ПОДТВЕРЖДЕНИЯ:
			• Отправитель при отправке сегмента устаналивает таймер, который задает время ожидания подтверждения, если
		      в течение этого времени подтверждение не пришло, таймер срабатывает и тот же самый сегмент отправляется
		      повторно

			!НО - работа TCP слегка отличается от вышеописанной схемы:
			• подтверждается не каждый сегмент, а несколько сегментов следующие друг за другом. Этот механизм
			  называется СКОЛЬЗЯЩЕЕ ОКНО
			• подтверждение и повторной отправки данных недостаточно для надежной передачи потока байт. Это защищает
			  только от потери сегментов. НО не обеспечивает сохранение порядка следования сообщений. Поэтому в
			  протокол TCP встроен механизм защиты от дублирования и нарушения порядка следования сообщений. 



		2. МЕХАНИЗМ ОБЕСПЕЧЕНИЯ ПОРЯДКА СЛЕДОВАНИЯ СООБЩЕНИЙ:
			• Механизм простой - сообщения нумеруются
			• В TCP нумеруются не сегменты, а байты. Т.к. разные сегменты могут иметь разный размер

			2.1 При передаче отправитель указывает номер первого байта данных. Конечный байт сегмента вычисляется
			    суммированием с размером сегмента минус 1
			2.2 Получатель получает подтверждение и в подтверждении включает номер следующего байта, который ожидается
			2.3 Отправитель передает следующий сегмент, включая в него номер первого байта
		
		3. МЕХАНИЗМ РЕШЕНИЯ ПРОБЛЕМЫ ДУБЛИРОВАНИЯ СООБЩЕНИЙ:
			3.1 Отправитель включает в сегмент номер первого передаваемого байта
			3.2 Получатель отправляет подтверждение и говорит, что ждет следующий сегмент
			3.3 Следующий сегмент не доходит до отправителя и он еще раз отправляет уже отправленный ранее сегмент
			3.4 Получатель видит по номеру первого байта, что этот сегмент он уже получал и еще раз высылает ответ,
				что ему нужен следующий сегмент	

		СОЕДИНЕНИЕ TCP:
			* Перед отправкой данных по TCP необходимо установить соединение.
			  Соединение нужно перед тем, как начать передачу данных. А после того, как передача данных завершена,
			  соединение нужно разорвать.

			  Задачи соединения:
			  • убедиться, что отправитель и получатель хотят передавать данные друг другу
			  • договориться о нумерации потоков байт. С точки зрения практической реализации нельзя всегда нумеровать
				данные в потоке байт с нуля. Каждый раз начальное значение для нумерации байт выбирается по определенному
				алгоритму. Отправитель и получатель должны будут договориться, какое начальное значение они будут
				использовать для нумерации потока байт
			  • при установке соединения происходит договоренность о некоторых параметрах соединения


