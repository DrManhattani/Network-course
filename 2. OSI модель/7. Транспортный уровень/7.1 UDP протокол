

	* UDP (User Datagram Protocol) - протокол дейтаграмм пользователя

		• сообщение UDP называется дейтаграмма - короткое сообщение, которое доставляется быстро 
		• не предоставляет дополнительного уровня надежности по сравнению с IP
			- НО нужен для того, чтобы указывать порт отправителя и порт получателя
		• нет гарантии доставки
		• нет соединения
		• нет гарантии сохранения порядка сообщений


	ФОРМАТ ЗАГОЛОВКА UDP
		• Порт отправителя, 16 бит
		• Порт получателя, 16 бит
		• Длина UDP, 16 бит - длина всей дейтаграммы UDP
		• Контрольная сумма UDP, 16 бит - для проверки правильности доставки дейтаграммы

		* Длина UDP:
			- минимум 8 байт (только заголовок)
			- максимум 65535 байт (максимальная длина данных IP-пакета)


	ПРИМЕНЕНИЕ UDP:
		• Преимущество UDP - скорость работы
			- т.к. нет накладных расходов на установку и на разрыв соединения
		• Надежность
			- ошибки в современных сетях происходят достаточно редко
			- ошибку могут обработать сетевые приложения	
		• Область применения
			- клиент-сервер
			- системы, которые работают в режиме запрос-ответ и обмениваются между собой короткими сообщениями

		• Пример:
			- DNS - система доменных имен
				-- позволяет определить по доменному имени соответствующий IP-адрес
				-- использует протокол UDP, порт 53
				* Пример сетевого взаимодействия в DNS:
					1. в системе DNS есть сервер, который знает, какие IP-адреса соответствуют доменным именам, и есть
					   клиент
					2. клиент DNS направляет запрос серверу - какой IP у какого-то доменного имени
					3. сервер DNS получает такой запрос, находит соответствующий IP-адрес и отправляет ответ
				* Взаимодействие происходит с использованием протокола UDP, и для получения IP-адреса достаточно
				  2 дейтаграммы
					** Если бы взаимодействие происходило с использованием протокола TCP:
						1. сначала нужно было бы установить соединение TCP. Для этого нужно 3 сообщения
						2. затем - запросить IP-адрес, получить сообщение. Еще 2 сообщения
						3. после получения ответа нужно разорвать соединение. Для этого нужно 3 или 4 сообщения

		• НЕДОСТАТОК в том, что он не обеспечивает надежности передачи данных. Поэтому ошибки должно обрабатывать
		  приложение. Рассмотрим, что произойдет, если запрос потерялся:
			1. приложение клиента DNS при отправке запроса запускает таймер
			2. если в течение какого-то времени ответ не приходит, таймер срабатывает, и тот же самый запрос отправляется
			   еще раз
			* Даже с учетом потери данных IP-адрес получен быстрее, чем если бы использовался протокол TCP
			* Недостатоком является то, что приложение должно само обрабатывать ошибочные ситуации

